[["index.html", "fishLengthAssess R package Chapter 1 What is fishLengthAssess? 1.1 Installation 1.2 How to use fishLengthAssess?", " fishLengthAssess R package William Harford 2024-12-17 Chapter 1 What is fishLengthAssess? fishLengthAssess acts as an aggregator of length-based stock assessment models. The package imposes a standardized formatting and metadata structure on length data sets, which can then be used in a variety of length-based assessment methods that are aggregated within the package. It also provides wrapper functions to link standardized formatting of length data sets with external R packages that contain length-based assessment methods (e.g. LBSPR package). 1.1 Installation fishLengthAssess depends on other packages to run its functions. These are the devtools, fishSimGTG (Harford 2024) and LBSPR (A. Hordyk 2021) R packages, that should be installed as follows: install.packages(&quot;devtools&quot;) install.packages(&quot;LBSPR&quot;) devtools::install_github(&quot;natureanalytics-ca/fishSimGTG@v1.0.6&quot;) The user then can install the development version of fishLengthAssess from GitHub with: devtools::install_github(&quot;natureanalytics-ca/fishLengthAssess&quot;) 1.2 How to use fishLengthAssess? The fishLengthAssess package aggregates data-limited methods that can be used for evaluating the condition of a fish stock based on length data sets. The methods are split in two categories: indicator-based functions and model-based functions. Indicator-based functions are based on metrics that include compliance with established size limits, 3 metrics proposed by Froese (2004), and trend-based metrics like mean length in the catch. Model-based methods consist of length-based stock assessment approaches, and includes an interface for estimation of SPR from observed length-frequency data, based on the LB-SPR method developed by A. R. Hordyk et al. (2016). The main functions in the package rely on life histories and length composition objects (LifeHistoryObj and LengthCompObj, respectively). Once a user standardizes their length data to fit the requirements of the length composition object and gathers the necessary information for creating a life history object, then all the functions within the fishLengthAssess package are straightforward to use having these objects as function arguments. The next chapter describes in more detail how to structure the data into the necessary R objects. References Froese, Rainer. 2004. “Keep It Simple: Three Indicators to Deal with Overfishing.” Fish and Fisheries 5 (1): 86–91. https://doi.org/10.1111/j.1467-2979.2004.00144.x. Harford, W. 2024. “fishSimGTG: Numerical Simulations of Fish Population Dynamics. R Package Version 1.0.6.” https://github.com/natureanalytics-ca/fishSimGTG. Hordyk, A. 2021. “LBSPR: Length-Based Spawning Potential Ratio. R Package Version 0.1.6.” https://github.com/AdrianHordyk/LBSPR. Hordyk, Adrian R., Kotaro Ono, Jeremy D. Prince, and Carl J. Walters. 2016. “A Simple Length-Structured Model Based on Life History Ratios and Incorporating Size-Dependent Selectivity: Application to Spawning Potential Ratios for Data-Poor Stocks.” Canadian Journal of Fisheries and Aquatic Sciences 73 (12): 1787–99. https://doi.org/10.1139/cjfas-2015-0422. "],["r-objects-and-example-data-sets.html", "Chapter 2 R objects and example data sets", " Chapter 2 R objects and example data sets The main functions in the package rely on life histories and length composition objects. The life history object LifeHistoryObj is an S4 object that holds the description of a life history. It gathers information about life history traits of each species such as the parameters of the length-weight relationship, von Bertalanffy growth parameters, length at 50% maturity, natural mortality, and others. The LifeHistoryObj belongs to the class LifeHistory in the fishSimGTG R package. An example LifeHistoryObj can be accessed within the fishLengthAssess package (LifeHistoryExample) and the user can see the elements or slots of the LifeHistoryObj using the slotNames() function. # Load the package library(fishLengthAssess) # use function slotNames to see elements of LifeHistoryObj example slotNames(fishSimGTG::LifeHistoryExample) ## [1] &quot;title&quot; &quot;speciesName&quot; &quot;shortDescription&quot; &quot;L_type&quot; ## [5] &quot;L_units&quot; &quot;Walpha_units&quot; &quot;Linf&quot; &quot;K&quot; ## [9] &quot;t0&quot; &quot;L50&quot; &quot;L95delta&quot; &quot;M&quot; ## [13] &quot;MK&quot; &quot;LW_A&quot; &quot;LW_B&quot; &quot;Tmax&quot; ## [17] &quot;Steep&quot; &quot;R0&quot; &quot;recSD&quot; &quot;recRho&quot; ## [21] &quot;isHermaph&quot; &quot;H50&quot; &quot;H95delta&quot; # check what LifeHistoryExample contains fishSimGTG::LifeHistoryExample ## An object of class &quot;LifeHistory&quot; ## Slot &quot;title&quot;: ## [1] &quot;Example fish&quot; ## ## Slot &quot;speciesName&quot;: ## [1] &quot;Example fish&quot; ## ## Slot &quot;shortDescription&quot;: ## [1] &quot;Simulated life history of a fish based on B-H invariants&quot; ## ## Slot &quot;L_type&quot;: ## [1] &quot;TL&quot; ## ## Slot &quot;L_units&quot;: ## [1] &quot;cm&quot; ## ## Slot &quot;Walpha_units&quot;: ## [1] &quot;g&quot; ## ## Slot &quot;Linf&quot;: ## [1] 100 ## ## Slot &quot;K&quot;: ## [1] 0.2 ## ## Slot &quot;t0&quot;: ## [1] 0 ## ## Slot &quot;L50&quot;: ## [1] 66 ## ## Slot &quot;L95delta&quot;: ## [1] 1 ## ## Slot &quot;M&quot;: ## [1] 0.3 ## ## Slot &quot;MK&quot;: ## [1] 1.5 ## ## Slot &quot;LW_A&quot;: ## [1] 0.01 ## ## Slot &quot;LW_B&quot;: ## [1] 3 ## ## Slot &quot;Tmax&quot;: ## [1] 15 ## ## Slot &quot;Steep&quot;: ## [1] 0.99 ## ## Slot &quot;R0&quot;: ## [1] 1000 ## ## Slot &quot;recSD&quot;: ## [1] 0.6 ## ## Slot &quot;recRho&quot;: ## [1] 0 ## ## Slot &quot;isHermaph&quot;: ## [1] FALSE ## ## Slot &quot;H50&quot;: ## numeric(0) ## ## Slot &quot;H95delta&quot;: ## numeric(0) The values of the slots can be edited by the user using the @ symbol. # store LifeHistoryExample as a variable LifeHistory_example &lt;- fishSimGTG::LifeHistoryExample # change slot speciesName LifeHistory_example@speciesName &lt;- &quot;Example species&quot; LifeHistory_example@speciesName ## [1] &quot;Example species&quot; More details on the life history object can be found in the user guide of the fishSimGTG R package in here. The length composition object is a length data set that can be structured either as raw data (i.e. individual length measurements) or length frequency data (i.e. numbers of fish per length bin). The raw length data is a collection of length measurements stored as a vector. These are typically original length measurements of fish, which have not been binned. Multiple columns can be used, with each column pertaining to a level of a grouping variable, such as year or fleet. The length frequency data is a collection of length measurements organized using two or more columns. The left-most column must contain bin mid points. The next column contains the number of length measurement observations in each bin. While the first column is reserved for the bin mid points, multiple columns to its right can be used with each pertaining to a level of a grouping variable, such as year or fleet. # Example data set with length composition defined as length frequencies by year knitr::kable(LengthCompExampleFreq@dt[21:30,],row.names = F) LMids 2015 2016 2017 2018 2019 51 0 0 1 16 31 53 0 2 2 22 37 55 3 0 1 40 25 57 2 3 1 34 20 59 1 8 5 41 14 61 5 9 7 42 11 63 7 8 10 33 10 65 11 12 24 30 5 67 12 13 25 12 6 69 13 26 25 18 3 # Example data set with length composition defined as raw length measurements by year knitr::kable(head(LengthCompExampleLength@dt)) 2015 2016 2017 2018 2019 55 49 51 43 29 55 53 53 43 31 55 53 53 45 31 57 57 55 45 33 57 57 57 45 33 59 57 59 47 33 "],["indicator-based-functions.html", "Chapter 3 Indicator-based functions", " Chapter 3 Indicator-based functions 3.0.1 PmatFunc function The PmatFunc function calculates the proportion of the catch that is above length at 50% maturity (L50). This metric is calculated relative to the length at which 50% of fish are mature, which serves as a threshold to determine maturity. The goal for mature fish in the catch is 100%, as it is generally recommended to allow fish to reproduce at least once before becoming vulnerable to fishing (Froese 2004). Mature fish in the catch is calculated as the percentage of the length composition that is equal to or greater than L50. 3.0.2 PoptFunc function The PoptFunc function calculates the proportion of fish within optimal sizes in the catch. Optimal size refers to the length at which a fish cohort achieves its maximum biomass, and thus, fishing sizes close to this optimal size should ensure high yields by weight. This function relies on a utility function LoptFunc that calculates the optimal length in the catch (optimum harvest length; Beverton (1992)). The range of optimal lengths in the catch is then defined as \\(Lopt\\) +/- 10%. The percent optimal sizes in the catch is calculated as the percentage of the length composition that fall within the defined range. 3.0.3 PmegaFunc function The PmegaFunc function calculates the proportion of mega-spawners in the catch. Mega-spawners are those larger than the optimal size range, thus they should comprise a low percentage of the catch. Percent mega-spawners is calculated as the percentage of the length composition equal or greater than optimum length plus 10%. Interpretation of this metric is nuanced because while it may be desirable to leave mega-spawners in the water, if mega-spawners are not present in the catch but are not being intentionally avoided by fishers, a lack of mega-spawners could be an indication of overfishing. For this reason, Froese (2004) suggests a target of 30% to 40% of mega-spawners in the catch. Conversely, if mega-spawners are being avoided due to market preferences, gear selectivity or through other intentional interventions, such as slot limits, this can allow larger-older fish spawn and contribute to population replenishment. 3.0.4 PLcFunc function The PLcFunc function calculates the proportion of catch above the minimum size limit. For fisheries with size limits, fish above the size limit is calculated as the percentage of the length composition that are equal or greater than the size limit. References Beverton, R. J. H. 1992. “Patterns of Reproductive Strategy Parameters in Some Marine Teleost Fishes.” Journal of Fish Biology 41 (sB): 137–60. https://doi.org/10.1111/j.1095-8649.1992.tb03875.x. Froese, Rainer. 2004. “Keep It Simple: Three Indicators to Deal with Overfishing.” Fish and Fisheries 5 (1): 86–91. https://doi.org/10.1111/j.1467-2979.2004.00144.x. "],["model-based-functions.html", "Chapter 4 Model-based functions", " Chapter 4 Model-based functions 4.0.1 lbsprWrapper function The lbsprWrapper function is a wrapper function for conducting length-based stock assessment (LBSPR) using length-based SPR methods (Hordyk et al. 2016). The model can use a conventional age-structured equilibrium population model or a length-structured version that is determined by growth-type-groups to account for size-based selectivity. Length frequency distribution of the stock is determined by natural mortality, fishing mortality, and length-based (LB) vulnerability to fishing. A relationship also exists between reproductive output of the population and length frequency distribution. Accordingly, measurements of the length frequency distribution can be used to infer SPR. The maximum likelihood LB-SPR estimation routine requires inputs of M/K, asymptotic length, a logistic maturity curve, coefficient of variation of asymptotic length and exponential parameter for fecundity. The former three inputs are obtained from a life history. The latter two inputs are assumed as follows: coefficient of variation of asymptotic length is specified at its default value of 0.1 and exponential parameter for fecundity is set equal to the beta parameter of the length-weight relationship or to a value of 3.0 if the beta parameter is unavailable. A length data set is also required, with the following caveats. First, LBSPR bins length data to produce a length-frequency distribution. When a length data set contains raw lengths, a bin width of 1 cm is used. When a length data set contains frequencies, the bin width of the length data set is used in the LBSPR fitting routine. Second, because LBSPR estimates the parameter of logistic selectivity function during the fitting process, the gear used to collect the length data must have asymptotic selectivity. Do not use LBSPR is this assumption cannot be met. Third, LBSPR assumes size structure data are representative at face value, so instances of hyperstability in the length frequency should be treated with caution (Coscino et al. 2024). For more information on the LBSPR model the user can check the package vignette here. References Coscino, Connor L., Lyall Bellquist, William J. Harford, and Brice X. Semmens. 2024. “Influence of Life History Characteristics on Data-Limited Stock Status Assertions and Minimum Size Limit Evaluations Using Length-Based Spawning Potential Ratio (LBSPR).” Fisheries Research 276 (August): 107036. https://doi.org/10.1016/j.fishres.2024.107036. "],["utility-functions.html", "Chapter 5 Utility functions", " Chapter 5 Utility functions 5.0.1 poolLengthComp function The poolLengthComp function pools length data when multiple columns exist. It sums length frequency data or concatenates length composition data as a single vector. 5.0.2 LoptFunc function The LoptFunc function calculates optimum harvest length. Derived from Beverton 1992, in a year-class subject to a moderate and constant exponential mortality and whose individuals are growing towards an asymptotic size (as in the Von Bertalanffy growth function), the total biomass of the year-class (i.e. the product of numbers and average weight) reaches a maximum value at some intermediate age (\\(Topt\\)) at a certain weight and length of the individual fish (\\(Wopt\\) and \\(Lopt\\), respectively). \\(Lopt\\) is calculated as: \\[ Lopt = 3 \\frac {L_{\\infty}}{(3 + M/K)} \\] This function is necessary for the PoptFunc function (proportion of fish within optimal sizes in the catch). 5.0.3 LcFunc function The LcFunc estimates length at full selectivity using the mode of the length-frequency distribution. "],["references.html", "References", " References Beverton, R. J. H. 1992. “Patterns of Reproductive Strategy Parameters in Some Marine Teleost Fishes.” Journal of Fish Biology 41 (sB): 137–60. https://doi.org/10.1111/j.1095-8649.1992.tb03875.x. Coscino, Connor L., Lyall Bellquist, William J. Harford, and Brice X. Semmens. 2024. “Influence of Life History Characteristics on Data-Limited Stock Status Assertions and Minimum Size Limit Evaluations Using Length-Based Spawning Potential Ratio (LBSPR).” Fisheries Research 276 (August): 107036. https://doi.org/10.1016/j.fishres.2024.107036. Froese, Rainer. 2004. “Keep It Simple: Three Indicators to Deal with Overfishing.” Fish and Fisheries 5 (1): 86–91. https://doi.org/10.1111/j.1467-2979.2004.00144.x. Harford, W. 2024. “fishSimGTG: Numerical Simulations of Fish Population Dynamics. R Package Version 1.0.6.” https://github.com/natureanalytics-ca/fishSimGTG. Hordyk, A. 2021. “LBSPR: Length-Based Spawning Potential Ratio. R Package Version 0.1.6.” https://github.com/AdrianHordyk/LBSPR. Hordyk, Adrian R., Kotaro Ono, Jeremy D. Prince, and Carl J. Walters. 2016. “A Simple Length-Structured Model Based on Life History Ratios and Incorporating Size-Dependent Selectivity: Application to Spawning Potential Ratios for Data-Poor Stocks.” Canadian Journal of Fisheries and Aquatic Sciences 73 (12): 1787–99. https://doi.org/10.1139/cjfas-2015-0422. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
